{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMLpHjQWOz93lVdmT4WzTo4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bNVYf8iUPn7U","executionInfo":{"status":"ok","timestamp":1751348677404,"user_tz":-330,"elapsed":22,"user":{"displayName":"Tata pavan kumar","userId":"15436247986388342007"}},"outputId":"b489b089-3432-4fae-ed4a-ff272bbcaea5"},"outputs":[{"output_type":"stream","name":"stdout","text":["10 20 25 30 40 50 10 20 25 40 \n"," 25 in array? True\n"]}],"source":["# 1. list\n","# 2. string\n","# 3. stacks\n","# 4. queues\n","# 5. linked list\n","# 6. hashing/ hashtables\n","# 7. sets\n","# 8. trees\n","# 9. graphs\n","# non-linear\n","# 10. heaps/priority queue\n","# 11. trie- prefix\n","# 12. recursion/ backtracking\n","# 13. searching\n","# 14. sorting\n","# 15. greedy/brute force\n","1'''# Array operations\n","# program to consider a list arr=[10,20,30,40] and perform insert operation with 50 and 25 respectively , delete 30 and traverse the array to fetch a number 25 is present or not.'''\n","\n","arr=[10,20,30,40]\n","# insert operation\n","arr.append(50)\n","arr.insert(2,25)\n","# print(arr)\n","for i in arr:\n","    print(i, end=' ')\n","# deletion\n","arr.remove(30)\n","arr.pop()\n","# print()\n","# traversal\n","for i in arr:\n","    print(i, end=' ')\n","# searching\n","print(\"\\n 25 in array?\", 25 in arr)"]},{"cell_type":"code","source":["2''''program to check wether the given string is palindrome or not and count the palindrome characters which are repeated\n","str=madam\n","output={m:2,a:1,d:1}\n","str=malayalam'''\n","text=input(\"Enter a name :\")\n","if text==text[::-1]:\n","    print(text,\"is palindrome\")\n","else:\n","    print(text,\"is not palindrome\")\n","freq={}\n","for ch in text:\n","  freq [ch]=freq.get(ch,0)+1\n","  print(freq)\n","print(freq)"],"metadata":{"id":"8nqmaKIiXAmd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751348723647,"user_tz":-330,"elapsed":6461,"user":{"displayName":"Tata pavan kumar","userId":"15436247986388342007"}},"outputId":"8fa01e2b-a3bc-4260-861c-3b9179093d50"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a name :malayalam\n","malayalam is palindrome\n","{'m': 1}\n","{'m': 1, 'a': 1}\n","{'m': 1, 'a': 1, 'l': 1}\n","{'m': 1, 'a': 2, 'l': 1}\n","{'m': 1, 'a': 2, 'l': 1, 'y': 1}\n","{'m': 1, 'a': 3, 'l': 1, 'y': 1}\n","{'m': 1, 'a': 3, 'l': 2, 'y': 1}\n","{'m': 1, 'a': 4, 'l': 2, 'y': 1}\n","{'m': 2, 'a': 4, 'l': 2, 'y': 1}\n","{'m': 2, 'a': 4, 'l': 2, 'y': 1}\n"]}]},{"cell_type":"code","source":["'''\n","in sorted or unstored array\n","\n","[45,-9,77,32]\n","\n","1.arr of list of size n\n","2.key for search element\n","3.start with zero Index\n","4.compare arr[i]==key\n","        arr[i]=key return Index\n","        else not (move to next index)\n","5.repeat same steps till n-1\n","6.if not found return -1'''\n","\n","\n","def linear_search(arr,key):\n","    for i in range(len(arr)):\n","        if arr[i]==key:\n","            return i\n","    return -1\n","size=int(input(\"Enter the size of array:\"))\n","arr=[]\n","print(\"Enter the elements of array:\")\n","for i in range(size):\n","    num=int(input(f\"Element {i+1}:\"))\n","    arr.append(num)\n","print(arr)\n","key=int(input(\"Enter the element to search:\"))\n","result= linear_search(arr,key)\n","if result!=-1:\n","    print(f\"\\n Element {key} found at index {result}\")\n","else:\n","    print(f\"\\n Element {key} not found in the array.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zx2Y-lBthOD6","executionInfo":{"status":"ok","timestamp":1751350715529,"user_tz":-330,"elapsed":19329,"user":{"displayName":"Tata pavan kumar","userId":"15436247986388342007"}},"outputId":"1981fa27-7c00-40a5-fb45-75e116ac8467"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the size of array:5\n","Enter the elements of array:\n","Element 1:11\n","Element 2:12\n","Element 3:13\n","Element 4:14\n","Element 5:15\n","[11, 12, 13, 14, 15]\n","Enter the element to search:13\n","\n"," Element 13 found at index 2\n"]}]},{"cell_type":"code","source":["'''\n","set low & high 0->n-1\n","condition low<=high\n","mid= low+high//2\n","arr[mid]==key return mid\n","arr[mid]<key low=mid+1\n","arr[mid]>key high=mid-1\n","arr[mid]!=key return -1\n","'''"],"metadata":{"id":"d4jIsubGnRnF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# binary search\n","def binary_search(arr,key):\n","  low=0\n","  high=len(arr)-1\n","  while low<=high:\n","    mid=(low+high)//2\n","    if arr[mid]==key:\n","      return mid\n","    elif arr[mid]<key:\n","      low=mid+1\n","    else:\n","      high=mid-1\n","  return -1\n","size=int(input(\"Enter the size of array:\"))\n","arr=[]\n","print(\"Enter the elements of array:\")\n","for i in range(size):\n","    num=int(input(f\"Element {i+1}:\"))\n","    arr.append(num)\n","print(arr)\n","key=int(input(\"Enter the element to search:\"))\n","result= binary_search(arr,key)\n","if result!=-1:\n","    print(f\"\\n Element {key} found at index {result}\")\n","else:\n","    print(f\"\\n Element {key} not found in the array.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5S8XfZKVvnuf","executionInfo":{"status":"ok","timestamp":1751353066540,"user_tz":-330,"elapsed":19728,"user":{"displayName":"Tata pavan kumar","userId":"15436247986388342007"}},"outputId":"60d1dcac-8e88-4c91-c700-9c50ac5c6daa"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter the size of array:5\n","Enter the elements of array:\n","Element 1:12\n","Element 2:34\n","Element 3:56\n","Element 4:78\n","Element 5:90\n","[12, 34, 56, 78, 90]\n","Enter the element to search:56\n","\n"," Element 56 found at index 2\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"3VdAQ5AJxrXA"},"execution_count":null,"outputs":[]}]}