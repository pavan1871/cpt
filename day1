# 1. list
# 2. string
# 3. stacks
# 4. queues
# 5. linked list
# 6. hashing/ hashtables
# 7. sets
# 8. trees
# 9. graphs
# non-linear
# 10. heaps/priority queue
# 11. trie- prefix
# 12. recursion/ backtracking
# 13. searching
# 14. sorting
# 15. greedy/brute force
1'''# Array operations
# program to consider a list arr=[10,20,30,40] and perform insert operation with 50 and 25 respectively , delete 30 and traverse the array to fetch a number 25 is present or not.'''

arr=[10,20,30,40]
# insert operation
arr.append(50)
arr.insert(2,25)
# print(arr)
for i in arr:
    print(i, end=' ')
# deletion
arr.remove(30)
arr.pop()
# print()
# traversal
for i in arr:
    print(i, end=' ')
# searching
print("\n 25 in array?", 25 in arr)

2''''program to check wether the given string is palindrome or not and count the palindrome characters which are repeated
str=madam
output={m:2,a:1,d:1}
str=malayalam'''
text=input("Enter a name :")
if text==text[::-1]:
    print(text,"is palindrome")
else:
    print(text,"is not palindrome")
freq={}
for ch in text:
  freq [ch]=freq.get(ch,0)+1
  print(freq)
print(freq)

'''
in sorted or unstored array

[45,-9,77,32]

1.arr of list of size n
2.key for search element
3.start with zero Index
4.compare arr[i]==key
        arr[i]=key return Index
        else not (move to next index)
5.repeat same steps till n-1
6.if not found return -1'''


def linear_search(arr,key):
    for i in range(len(arr)):
        if arr[i]==key:
            return i
    return -1
size=int(input("Enter the size of array:"))
arr=[]
print("Enter the elements of array:")
for i in range(size):
    num=int(input(f"Element {i+1}:"))
    arr.append(num)
print(arr)
key=int(input("Enter the element to search:"))
result= linear_search(arr,key)
if result!=-1:
    print(f"\n Element {key} found at index {result}")
else:
    print(f"\n Element {key} not found in the array.")
